class personage:
    def __init__(self, name, hero_class, lvl, hp, weapon, dmg):
        self.name = name
        self.hero_class = hero_class
        self.lvl = lvl
        self.hp = hp
        self.weapon = weapon
        self.dmg = dmg

    def info_pers(self):
        print(f"name: {self.name} | hero_class: {self.hero_class} | lvl: {self.lvl}\n"
              f"Health: {self.hp}\n"
              f"weapon: {self.weapon} | damage: {self.dmg}")

class warrior(personage):
    def __init__(self, name, hero_class, lvl, hp, weapon, dmg, armor):
        super().__init__(name, hero_class, lvl, hp, weapon, dmg)
        self.armor = armor

    def __calculate_hp(self):
        return self.hp + (self.armor * 0.5) #test

    def info_pers(self):
        effective_hp = self.__calculate_hp()
        super().info_pers()
        print(f"armor: {self.armor}")
        print(f"effective hp: {effective_hp}")

    def warrior_attack(self):
        if self.hp > 50 and self.armor != 0:
            print(f"{self.name} is on the attack! \n")
        else:
            print(f"{self.name}: Low hp!\n")

class Hike:
    def __init__(self):
        self.list_hero = []

        def add_hero(self, hero):
            self.list_hero_append(hero)

        def print_heroes_hike(self):
            print("Heroes on a hike:")
            for x in self-list_hero:
                print(f" - {x.name}")

    print

warrior = warrior("krutoi872", "TikTok", 1, 100, "sandali", 100, "ochki + kojanka")

warrior.info_pers()
